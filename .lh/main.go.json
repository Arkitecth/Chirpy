{
    "sourceFile": "main.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1714515786627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1714515834043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,3 @@\n-package main\n\\ No newline at end of file\n+package main\n+\n+type apiHandler \n\\ No newline at end of file\n"
                },
                {
                    "date": 1714515847178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n package main\n \n-type apiHandler \n\\ No newline at end of file\n+type apiHandler struct{}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714515858957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,5 @@\n package main\n \n-type apiHandler struct{}\n\\ No newline at end of file\n+type apiHandler struct{}\n+\n+func (apiHandler)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714515872572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n package main\n \n+import \"net/http\"\n+\n type apiHandler struct{}\n\\ No newline at end of file\n \n-func (apiHandler)\n+func (apiHandler) ServeHttp(http.ResponseWriter)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714515877641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,5 @@\n import \"net/http\"\n \n type apiHandler struct{}\n \n-func (apiHandler) ServeHttp(http.ResponseWriter)\n\\ No newline at end of file\n+func (apiHandler) ServeHttp(w http.ResponseWriter)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714515891455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,6 @@\n import \"net/http\"\n \n type apiHandler struct{}\n \n-func (apiHandler) ServeHttp(w http.ResponseWriter)\n\\ No newline at end of file\n+\n+func (apiHandler) ServeHTTP(http.ResponseWriter, *http.Request) {}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714515899498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,6 +3,9 @@\n import \"net/http\"\n \n type apiHandler struct{}\n \n+func (apiHandler) ServeHTTP(http.ResponseWriter, *http.Request) {}\n \n\\ No newline at end of file\n-func (apiHandler) ServeHTTP(http.ResponseWriter, *http.Request) {}\n+func main() {\n+\t\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714515906408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,24 @@\n package main\n \n-import \"net/http\"\n+import (\n+\t\"fmt\"\n+\t\"net/http\"\n+)\n \n type apiHandler struct{}\n \n func (apiHandler) ServeHTTP(http.ResponseWriter, *http.Request) {}\n \n func main() {\n-\t\n+\tmux := http.NewServeMux()\n+\tmux.Handle(\"/api/\", apiHandler{})\n+\tmux.HandleFunc(\"/\", func(w http.ResponseWriter, req *http.Request) {\n+\t\t// The \"/\" pattern matches everything, so we need to check\n+\t\t// that we're at the root here.\n+\t\tif req.URL.Path != \"/\" {\n+\t\t\thttp.NotFound(w, req)\n+\t\t\treturn\n+\t\t}\n+\t\tfmt.Fprintf(w, \"Welcome to the home page!\")\n+\t})\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714516040675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,20 @@\n \t\"net/http\"\n )\n \n type apiHandler struct{}\n+func middlewareCors(next http.Handler) http.Handler {\n+\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n+\t\tw.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\n+\t\tw.Header().Set(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS, PUT, DELETE\")\n+\t\tw.Header().Set(\"Access-Control-Allow-Headers\", \"*\")\n+\t\tif r.Method == \"OPTIONS\" {\n+\t\t\tw.WriteHeader(http.StatusOK)\n+\t\t\treturn\n+\t\t}\n+\t\tnext.ServeHTTP(w, r)\n+\t})\n+}\n \n func (apiHandler) ServeHTTP(http.ResponseWriter, *http.Request) {}\n \n func main() {\n"
                },
                {
                    "date": 1714516075819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n func (apiHandler) ServeHTTP(http.ResponseWriter, *http.Request) {}\n \n func main() {\n \tmux := http.NewServeMux()\n+\tcorsMux := middlewareCors(mux)\n \tmux.Handle(\"/api/\", apiHandler{})\n \tmux.HandleFunc(\"/\", func(w http.ResponseWriter, req *http.Request) {\n \t\t// The \"/\" pattern matches everything, so we need to check\n \t\t// that we're at the root here.\n"
                },
                {
                    "date": 1714516144918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n package main\n \n import (\n-\t\"fmt\"\n \t\"net/http\"\n )\n \n type apiHandler struct{}\n@@ -23,15 +22,6 @@\n \n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n-\tmux.Handle(\"/api/\", apiHandler{})\n-\tmux.HandleFunc(\"/\", func(w http.ResponseWriter, req *http.Request) {\n-\t\t// The \"/\" pattern matches everything, so we need to check\n-\t\t// that we're at the root here.\n-\t\tif req.URL.Path != \"/\" {\n-\t\t\thttp.NotFound(w, req)\n-\t\t\treturn\n-\t\t}\n-\t\tfmt.Fprintf(w, \"Welcome to the home page!\")\n-\t})\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714516242582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,6 +22,6 @@\n \n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n-\n+\tmux.Handle(\"/\")\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714516250335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,6 +22,6 @@\n \n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n-\tmux.Handle(\"/\")\n+\tmux.Handle(\"/\", corsMux)\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714516307927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,6 +22,6 @@\n \n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n-\tmux.Handle(\"/\", corsMux)\n+\t\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714516660874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,6 +22,6 @@\n \n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n-\t\n+\thttp.Server.Handler = corsMux\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714516828378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,6 +22,6 @@\n \n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n-\thttp.Server.Handler = corsMux\n+\thttp.HandleFunc(\"/\", corsMux)\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714516856198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,5 +23,6 @@\n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n \thttp.HandleFunc(\"/\", corsMux)\n+\thttp.ListenAndServe(\":3000\")\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714516870477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,6 +23,6 @@\n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n \thttp.HandleFunc(\"/\", corsMux)\n-\thttp.ListenAndServe(\":3000\")\n+\thttp.ListenAndServe(\":3000\", nil)\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714516910947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,6 +23,6 @@\n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n \thttp.HandleFunc(\"/\", corsMux)\n-\thttp.ListenAndServe(\":3000\", nil)\n+\thttp.ListenAndServe(\":3000\", corsMux)\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714517023560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,7 +22,6 @@\n \n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n-\thttp.HandleFunc(\"/\", corsMux)\n-\thttp.ListenAndServe(\":3000\", corsMux)\n+\thttp.ListenAndServe(\":8080\", corsMux)\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714517242393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,8 @@\n \t\tnext.ServeHTTP(w, r)\n \t})\n }\n \n-func (apiHandler) ServeHTTP(http.ResponseWriter, *http.Request) {}\n-\n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n \thttp.ListenAndServe(\":8080\", corsMux)\n"
                },
                {
                    "date": 1714517255423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,6 +20,6 @@\n \n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n-\thttp.ListenAndServe(\":8080\", corsMux)\n+\thttp.ListenAndServe(\"8080\", corsMux)\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714517266126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import (\n \t\"net/http\"\n )\n \n-type apiHandler struct{}\n func middlewareCors(next http.Handler) http.Handler {\n \treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n \t\tw.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\n \t\tw.Header().Set(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS, PUT, DELETE\")\n@@ -20,6 +19,6 @@\n \n func main() {\n \tmux := http.NewServeMux()\n \tcorsMux := middlewareCors(mux)\n-\thttp.ListenAndServe(\"8080\", corsMux)\n+\thttp.ListenAndServe(\":8080\", corsMux)\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714517449550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n package main\n \n import (\n+\t\"log\"\n \t\"net/http\"\n )\n \n func middlewareCors(next http.Handler) http.Handler {\n@@ -17,8 +18,16 @@\n \t})\n }\n \n func main() {\n+\tconst port = \"8080\"\n+\n \tmux := http.NewServeMux()\n-\tcorsMux := middlewareCors(mux)\n-\thttp.ListenAndServe(\":8080\", corsMux)\n+\n+\tsrv := &http.Server{\n+\t\tAddr:    \":\" + port,\n+\t\tHandler: mux,\n+\t}\n+\n+\tlog.Printf(\"Serving on port: %s\\n\", port)\n+\tlog.Fatal(srv.ListenAndServe())\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714517621836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n func main() {\n \tconst port = \"8080\"\n \n-\tmux := http.NewServeMux()\n+\tmux := middlewareCors( http.NewServeMux())\n \n \tsrv := &http.Server{\n \t\tAddr:    \":\" + port,\n \t\tHandler: mux,\n"
                }
            ],
            "date": 1714515786627,
            "name": "Commit-0",
            "content": "package main"
        }
    ]
}